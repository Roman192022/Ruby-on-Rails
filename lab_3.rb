# movie_catalog_classes.rb

require 'json'
require 'yaml'

# --- –ö–ª–∞—Å Movie ---
class Movie
  attr_accessor :title, :directors, :genres, :actors, :year, :rating, :watched

  def initialize(title, directors, genres, actors, year, rating, watched)
    @title = title
    @directors = directors
    @genres = genres
    @actors = actors
    @year = year
    @rating = rating
    @watched = watched
  end

  def to_hash
    {
      directors: @directors,
      genres: @genres,
      actors: @actors,
      year: @year,
      rating: @rating,
      watched: @watched
    }
  end

  def self.from_hash(title, hash)
    Movie.new(
      title,
      hash[:directors] || hash['directors'],
      hash[:genres] || hash['genres'],
      hash[:actors] || hash['actors'],
      hash[:year] || hash['year'],
      hash[:rating] || hash['rating'],
      hash[:watched] || hash['watched']
    )
  end
end

# --- –ö–ª–∞—Å MovieCatalog ---
class MovieCatalog
  def initialize
    @movies = {}
  end

  def add_movie
    print "–ù–∞–∑–≤–∞ —Ñ—ñ–ª—å–º—É: "
    title = gets.chomp
    if @movies.key?(title)
      puts "‚ö†Ô∏è –¢–∞–∫–∏–π —Ñ—ñ–ª—å–º –≤–∂–µ —ñ—Å–Ω—É—î."
      return
    end

    movie = create_movie(title)
    @movies[title] = movie
    puts "‚úÖ –§—ñ–ª—å–º '#{title}' –¥–æ–¥–∞–Ω–æ!"
  end

  def edit_movie
    print "–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ñ—ñ–ª—å–º—É –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è: "
    title = gets.chomp
    if @movies.key?(title)
      puts "–†–µ–¥–∞–≥—É—î–º–æ —Ñ—ñ–ª—å–º '#{title}'"
      @movies[title] = create_movie(title)
      puts "‚úÖ –§—ñ–ª—å–º '#{title}' –æ–Ω–æ–≤–ª–µ–Ω–æ!"
    else
      puts "‚ö†Ô∏è –§—ñ–ª—å–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ."
    end
  end

  def delete_movie
    print "–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ñ—ñ–ª—å–º—É –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è: "
    title = gets.chomp
    if @movies.delete(title)
      puts "‚úÖ –§—ñ–ª—å–º '#{title}' –≤–∏–¥–∞–ª–µ–Ω–æ."
    else
      puts "‚ö†Ô∏è –§—ñ–ª—å–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ."
    end
  end

  def list_movies
    if @movies.empty?
      puts "–ö–∞—Ç–∞–ª–æ–≥ –ø–æ—Ä–æ–∂–Ω—ñ–π."
    else
      puts "\n--- –£—Å—ñ —Ñ—ñ–ª—å–º–∏ ---"
      @movies.each_value do |movie|
        puts "üé¨ #{movie.title} (#{movie.year}) - —Ä–µ–π—Ç–∏–Ω–≥ #{movie.rating}, –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏–π: #{movie.watched ? '—Ç–∞–∫' : '–Ω—ñ'}"
      end
    end
  end

  def save_to_json(filename)
    data = @movies.transform_values(&:to_hash)
    File.write(filename, JSON.pretty_generate(data))
    puts "‚úÖ –ö–∞—Ç–∞–ª–æ–≥ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É #{filename} (JSON)"
  end

  def load_from_json(filename)
    data = JSON.parse(File.read(filename))
    @movies = data.transform_keys(&:to_s).transform_values do |movie_hash|
      Movie.from_hash(movie_hash['title'] || '', movie_hash)
    end
    puts "‚úÖ –ö–∞—Ç–∞–ª–æ–≥ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ #{filename} (JSON)"
  end

  def save_to_yaml(filename)
    data = @movies.transform_values(&:to_hash)
    File.write(filename, data.to_yaml)
    puts "‚úÖ –ö–∞—Ç–∞–ª–æ–≥ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É #{filename} (YAML)"
  end

  def load_from_yaml(filename)
    data = YAML.load_file(filename)
    @movies = data.transform_keys(&:to_s).transform_values do |movie_hash|
      Movie.from_hash(movie_hash['title'] || '', movie_hash)
    end
    puts "‚úÖ –ö–∞—Ç–∞–ª–æ–≥ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ #{filename} (YAML)"
  end

  private

  def create_movie(title)
    print "–†–µ–∂–∏—Å–µ—Ä–∏ (—á–µ—Ä–µ–∑ –∫–æ–º—É): "
    directors = gets.chomp.split(",").map(&:strip)
    print "–ñ–∞–Ω—Ä–∏ (—á–µ—Ä–µ–∑ –∫–æ–º—É): "
    genres = gets.chomp.split(",").map(&:strip)
    print "–ê–∫—Ç–æ—Ä–∏ (—á–µ—Ä–µ–∑ –∫–æ–º—É): "
    actors = gets.chomp.split(",").map(&:strip)
    print "–†—ñ–∫: "
    year = gets.chomp.to_i
    print "–†–µ–π—Ç–∏–Ω–≥: "
    rating = gets.chomp.to_f
    print "–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏–π? (y/n): "
    watched = gets.chomp.downcase == 'y'

    Movie.new(title, directors, genres, actors, year, rating, watched)
  end
end

# --- –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ---
catalog = MovieCatalog.new

loop do
  puts "\n=== –ö–∞—Ç–∞–ª–æ–≥ —Ñ—ñ–ª—å–º—ñ–≤ ==="
  puts "1. –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ —Ñ—ñ–ª—å–º–∏"
  puts "2. –î–æ–¥–∞—Ç–∏ —Ñ—ñ–ª—å–º"
  puts "3. –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ —Ñ—ñ–ª—å–º"
  puts "4. –í–∏–¥–∞–ª–∏—Ç–∏ —Ñ—ñ–ª—å–º"
  puts "5. –ó–±–µ—Ä–µ–≥—Ç–∏ —É JSON"
  puts "6. –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ JSON"
  puts "7. –ó–±–µ—Ä–µ–≥—Ç–∏ —É YAML"
  puts "8. –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ YAML"
  puts "9. –í–∏—Ö—ñ–¥"

  print "–í–∏–±—ñ—Ä: "
  choice = gets.chomp.to_i

  case choice
  when 1 then catalog.list_movies
  when 2 then catalog.add_movie
  when 3 then catalog.edit_movie
  when 4 then catalog.delete_movie
  when 5 then catalog.save_to_json("movies.json")
  when 6 then catalog.load_from_json("movies.json")
  when 7 then catalog.save_to_yaml("movies.yaml")
  when 8 then catalog.load_from_yaml("movies.yaml")
  when 9
    puts "üëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!"
    break
  else
    puts "‚ö†Ô∏è –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä."
  end
end
