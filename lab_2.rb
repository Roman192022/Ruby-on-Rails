# movies_crud.rb

require 'json'
require 'yaml'

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–∞—Ç–∞–ª–æ–≥—É
movies = {}

# --- –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —É —Ñ–∞–π–ª ---
def save_to_json(movies, filename)
  File.write(filename, JSON.pretty_generate(movies))
  puts "‚úÖ –ö–∞—Ç–∞–ª–æ–≥ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É #{filename} (JSON)"
end

def save_to_yaml(movies, filename)
  File.write(filename, movies.to_yaml)
  puts "‚úÖ –ö–∞—Ç–∞–ª–æ–≥ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É #{filename} (YAML)"
end

# --- –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ —Ñ–∞–π–ª—É ---
def load_from_json(filename)
  data = JSON.parse(File.read(filename))
  puts "‚úÖ –ö–∞—Ç–∞–ª–æ–≥ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ #{filename} (JSON)"
  # –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –∫–ª—é—á—ñ –≤ —Å–∏–º–≤–æ–ª–∏
  data.transform_values do |movie|
    movie.transform_keys(&:to_sym)
  end
end

def load_from_yaml(filename)
  data = YAML.load_file(filename)
  puts "‚úÖ –ö–∞—Ç–∞–ª–æ–≥ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ #{filename} (YAML)"
  data
end

# --- CRUD –û–ø–µ—Ä–∞—Ü—ñ—ó ---

# CREATE
def add_movie(movies)
  print "–ù–∞–∑–≤–∞ —Ñ—ñ–ª—å–º—É: "
  title = gets.chomp
  if movies.key?(title)
    puts "‚ö†Ô∏è –¢–∞–∫–∏–π —Ñ—ñ–ª—å–º –≤–∂–µ —ñ—Å–Ω—É—î."
    return
  end

  print "–†–µ–∂–∏—Å–µ—Ä–∏ (—á–µ—Ä–µ–∑ –∫–æ–º—É): "
  directors = gets.chomp.split(",").map(&:strip)
  print "–ñ–∞–Ω—Ä–∏ (—á–µ—Ä–µ–∑ –∫–æ–º—É): "
  genres = gets.chomp.split(",").map(&:strip)
  print "–ê–∫—Ç–æ—Ä–∏ (—á–µ—Ä–µ–∑ –∫–æ–º—É): "
  actors = gets.chomp.split(",").map(&:strip)
  print "–†—ñ–∫: "
  year = gets.chomp.to_i
  print "–†–µ–π—Ç–∏–Ω–≥: "
  rating = gets.chomp.to_f
  print "–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏–π? (y/n): "
  watched = gets.chomp.downcase == 'y'

  movies[title] = {
    directors: directors,
    genres: genres,
    actors: actors,
    year: year,
    rating: rating,
    watched: watched
  }

  puts "‚úÖ –§—ñ–ª—å–º '#{title}' –¥–æ–¥–∞–Ω–æ!"
end

# READ (–ø–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ —Ñ—ñ–ª—å–º–∏)
def list_movies(movies)
  if movies.empty?
    puts "–ö–∞—Ç–∞–ª–æ–≥ –ø–æ—Ä–æ–∂–Ω—ñ–π."
  else
    puts "\n--- –£—Å—ñ —Ñ—ñ–ª—å–º–∏ ---"
    movies.each do |title, movie|
      puts "üé¨ #{title} (#{movie[:year]}) - —Ä–µ–π—Ç–∏–Ω–≥ #{movie[:rating]}, –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏–π: #{movie[:watched] ? '—Ç–∞–∫' : '–Ω—ñ'}"
    end
  end
end

# UPDATE
def edit_movie(movies)
  print "–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ñ—ñ–ª—å–º—É –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è: "
  title = gets.chomp
  if movies.key?(title)
    puts "–†–µ–¥–∞–≥—É—î–º–æ —Ñ—ñ–ª—å–º '#{title}'"
    print "–ù–æ–≤—ñ —Ä–µ–∂–∏—Å–µ—Ä–∏ (—á–µ—Ä–µ–∑ –∫–æ–º—É): "
    movies[title][:directors] = gets.chomp.split(",").map(&:strip)
    print "–ù–æ–≤—ñ –∂–∞–Ω—Ä–∏ (—á–µ—Ä–µ–∑ –∫–æ–º—É): "
    movies[title][:genres] = gets.chomp.split(",").map(&:strip)
    print "–ù–æ–≤—ñ –∞–∫—Ç–æ—Ä–∏ (—á–µ—Ä–µ–∑ –∫–æ–º—É): "
    movies[title][:actors] = gets.chomp.split(",").map(&:strip)
    print "–ù–æ–≤–∏–π —Ä—ñ–∫: "
    movies[title][:year] = gets.chomp.to_i
    print "–ù–æ–≤–∏–π —Ä–µ–π—Ç–∏–Ω–≥: "
    movies[title][:rating] = gets.chomp.to_f
    print "–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏–π? (y/n): "
    movies[title][:watched] = gets.chomp.downcase == 'y'

    puts "‚úÖ –§—ñ–ª—å–º '#{title}' –æ–Ω–æ–≤–ª–µ–Ω–æ!"
  else
    puts "‚ö†Ô∏è –§—ñ–ª—å–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ."
  end
end

# DELETE
def delete_movie(movies)
  print "–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ñ—ñ–ª—å–º—É –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è: "
  title = gets.chomp
  if movies.delete(title)
    puts "‚úÖ –§—ñ–ª—å–º '#{title}' –≤–∏–¥–∞–ª–µ–Ω–æ."
  else
    puts "‚ö†Ô∏è –§—ñ–ª—å–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ."
  end
end

# --- –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ---
loop do
  puts "\n=== –ö–∞—Ç–∞–ª–æ–≥ —Ñ—ñ–ª—å–º—ñ–≤ ==="
  puts "1. –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ —Ñ—ñ–ª—å–º–∏"
  puts "2. –î–æ–¥–∞—Ç–∏ —Ñ—ñ–ª—å–º"
  puts "3. –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ —Ñ—ñ–ª—å–º"
  puts "4. –í–∏–¥–∞–ª–∏—Ç–∏ —Ñ—ñ–ª—å–º"
  puts "5. –ó–±–µ—Ä–µ–≥—Ç–∏ —É JSON"
  puts "6. –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ JSON"
  puts "7. –ó–±–µ—Ä–µ–≥—Ç–∏ —É YAML"
  puts "8. –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ YAML"
  puts "9. –í–∏—Ö—ñ–¥"

  print "–í–∏–±—ñ—Ä: "
  choice = gets.chomp.to_i

  case choice
  when 1 then list_movies(movies)
  when 2 then add_movie(movies)
  when 3 then edit_movie(movies)
  when 4 then delete_movie(movies)
  when 5 then save_to_json(movies, "movies.json")
  when 6 then movies = load_from_json("movies.json")
  when 7 then save_to_yaml(movies, "movies.yaml")
  when 8 then movies = load_from_yaml("movies.yaml")
  when 9
    puts "üëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!"
    break
  else
    puts "‚ö†Ô∏è –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä."
  end
end
